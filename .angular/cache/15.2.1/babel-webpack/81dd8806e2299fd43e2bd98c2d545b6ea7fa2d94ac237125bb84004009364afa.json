{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nexport let ProductosService = /*#__PURE__*/(() => {\n  class ProductosService {\n    constructor(http) {\n      this.http = http;\n    }\n    eliminarProducto(idProducto) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.http.delete(\"/producto?id=\".concat(idProducto));\n      });\n    }\n    agregarProducto(producto) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.http.post(\"/producto\", producto);\n      });\n    }\n    /*\r\n    El formdata debe tener el id del producto\r\n     */\n    agregarFotosDeProducto(fotos) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.http.formdata(\"/fotos_producto\", fotos);\n      });\n    }\n    obtenerProductos() {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.http.get(\"/productos\");\n      });\n    }\n    obtenerProductosConFotos() {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.http.get(\"/productos_con_fotos\");\n      });\n    }\n    obtenerProductoConFotosPorId(idProducto) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield this.http.get(\"/producto?id=\".concat(idProducto));\n      });\n    }\n  }\n  ProductosService.ɵfac = function ProductosService_Factory(t) {\n    return new (t || ProductosService)(i0.ɵɵinject(i1.HttpService));\n  };\n  ProductosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductosService,\n    factory: ProductosService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductosService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}